/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
  // Apply the java-library plugin for API and implementation separation.
  `java-library`
  id("com.github.johnrengelman.shadow") version "5.1.0"
}

repositories {
  // Use JCenter for resolving dependencies.
  jcenter()
}

dependencies {
  // Use JUnit test framework.
  // testImplementation("junit:junit:4.13")

  // These dependencies are used internally, and not exposed to consumers on their own compile classpath.
  implementation(files("src/main/resources/jade-4.5.0.jar"))
  implementation("org.eclipse.jetty.aggregate:jetty-all:9.0.0.RC2")
  implementation("org.eclipse.rdf4j:rdf4j-runtime:3.6.1")
}

tasks {
  shadowJar {
    archiveBaseName.set("org_hyperagents_jade_HypermediaWeaverAgent")
    archiveClassifier.set("")
    archiveVersion.set("")

    mergeServiceFiles()
  }

  task<JavaExec>("runMain") {
    main = "jade.Boot"
    args = listOf("-conf", "main.properties",
      "hwa:org.hyperagents.jade.HypermediaWeaverAgent")
    classpath = sourceSets["main"].runtimeClasspath
  }

  task<JavaExec>("runLocal") {
    main = "jade.Boot"
    args = listOf("-container")
    classpath = files("src/main/resources/jade-4.5.0.jar")
  }

  task<JavaExec>("runRemote") {
    val hwa = "hwa-" + System.currentTimeMillis() + ":org.hyperagents.jade.HypermediaWeaverAgent";

    main = "jade.Boot"
    args = listOf("-container", "-conf", "peripheral.properties", hwa)
    classpath = sourceSets["main"].runtimeClasspath
  }
}
